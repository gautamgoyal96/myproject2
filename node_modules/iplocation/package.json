{
  "_from": "iplocation",
  "_id": "iplocation@5.0.0",
  "_inBundle": false,
  "_integrity": "sha512-ZeXkwJAyppMcP/Jf67L0ov4xgnm71KN3cAWDwHPHjgTpJ5uGHclwMv0ZjBa+3TRKN19ycxILKZ6I73OBSQkTfg==",
  "_location": "/iplocation",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "iplocation",
    "fetchSpec": "latest",
    "name": "iplocation",
    "raw": "iplocation",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/iplocation/-/iplocation-5.0.0.tgz",
  "_shasum": "8202a8ba58247de041d68696efce2b8fd9239e34",
  "_spec": "iplocation",
  "_where": "/opt/lampp/htdocs/node/myapp",
  "author": {
    "name": "Rory Bradford"
  },
  "bugs": {
    "url": "https://github.com/roryrjb/iplocation/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Chris Dyson"
    }
  ],
  "dependencies": {
    "debug": "^2.6.3",
    "ip-regex": "^2.1.0",
    "request": "^2.81.0"
  },
  "deprecated": false,
  "description": "get ip location information",
  "devDependencies": {
    "ahcom": "^0.0.10",
    "standard": "^10.0.1"
  },
  "files": [
    "LICENSE.md",
    "README.md",
    "index.js",
    "test.js"
  ],
  "homepage": "https://github.com/roryrjb/iplocation",
  "keywords": [
    "geolocation",
    "ip",
    "ip-location",
    "location"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "iplocation",
  "optionalDependencies": {},
  "readme": "# iplocation\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![License][license-image]][license-url]\n[![Code style][standard-image]][standard-url]\n\n> Get IP location information using various providers.\n\n### Installation\n\n```\n$ npm install iplocation\n```\n\n...or:\n\n```\n$ yarn add iplocation\n```\n\n### Usage\n\n__iplocation([ip], [providers], [callback])__\n\n__Providers:__\n\nSupply additional providers in the following format:\n\n```\nhttps://domain-name.tld/json/*\nhttps://domain-name.tld/*/json\nhttps://domain-name.tld/?ip=*&format=json\n```\n\nBasically wherever the API requires the IP address put a `*` and the module\nwill replace it with the IP address entered as arguments.\n\nYou can ommit the IP address parameter to return data for the ip address of the requesting client, (in a server environment this will be the server public IP address, in a browser this will be the clients public IP address).\n\n\n__Callback:__\n\nIf you omit the callback argument, the function will return a promise.\n\n__Providers:__\n\nThis module will try providers _in order_, moving onto then next provider if the request fails. If provided, additional providers will be tried first, if the all additional providers fail or none are provided then the following defaults are tried _in order_.\n\n* https://freegeoip.net/\n* https://ipapi.co/\n\nYou won't get anything if __all__ providers fail.\n\n__Callbacks:__\n\n```javascript\nvar iplocation = require('iplocation')\n\niplocation('56.70.97.8', function (error, res) {\n\n  /* res:\n\n    {\n      as: 'AS11286 KeyBank National Association',\n      city: 'Cleveland',\n      country: 'United States',\n      countryCode: 'US',\n      isp: 'KeyBank National Association',\n      lat: 41.4875,\n      lon: -81.6724,\n      org: 'KeyBank National Association',\n      query: '156.77.54.32',\n      region: 'OH',\n      regionName: 'Ohio',\n      status: 'success',\n      timezone: 'America/New_York',\n      zip: '44115'\n    }\n\n  */\n\n})\n```\n\n__Promises:__\n\n```javascript\nvar iplocation = require('iplocation')\n\niplocation('56.70.97.8')\n  .then(res => {\n\n    /* res:\n\n      {\n        as: 'AS11286 KeyBank National Association',\n        city: 'Cleveland',\n        country: 'United States',\n        countryCode: 'US',\n        isp: 'KeyBank National Association',\n        lat: 41.4875,\n        lon: -81.6724,\n        org: 'KeyBank National Association',\n        query: '156.77.54.32',\n        region: 'OH',\n        regionName: 'Ohio',\n        status: 'success',\n        timezone: 'America/New_York',\n        zip: '44115'\n      }\n\n    */\n\n  })\n  .catch(err => {\n    console.error(err)\n  })\n```\n\n### See Also\n\n[`iplocation-cli`](https://github.com/roryrjb/iplocation-cli) - this module as a command line app.\n\n[npm-image]: https://img.shields.io/npm/v/iplocation.svg\n[npm-url]: https://npmjs.org/package/iplocation\n[travis-image]: https://img.shields.io/travis/roryrjb/iplocation.svg\n[travis-url]: https://travis-ci.org/roryrjb/iplocation\n[license-image]: http://img.shields.io/npm/l/iplocation.svg\n[license-url]: LICENSE\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n[standard-url]: https://github.com/feross/standard\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/roryrjb/iplocation.git"
  },
  "scripts": {
    "test": "standard && ./node_modules/.bin/ahcom"
  },
  "version": "5.0.0"
}
